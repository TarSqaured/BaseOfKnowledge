{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udcda Base of Knowledge","text":"<p>Welcome! This is our shared knowledge hub.</p> <ul> <li>Use the search box \ud83d\udd0d above to find anything instantly.</li> <li>Add new topics by creating Markdown files under <code>docs/</code>.</li> </ul>"},{"location":"#topics","title":"\ud83d\uddc2 Topics","text":""},{"location":"Getting-Started/Welcome/","title":"Welcome","text":"<p>This is your \u201cGetting Started\u201d guide. Explain the purpose of this Base of Knowledge here.</p>"},{"location":"Hosting/Caddy%20Overview%20and%20Config/","title":"Caddy Overview and Config","text":""},{"location":"Hosting/Caddy%20Overview%20and%20Config/#what-is-caddy","title":"What Is Caddy?","text":"<p>Caddy is a modern web server and reverse proxy that:</p> <ul> <li> <p>\ud83d\udd12 Automatically obtains and renews TLS certificates via Let\u2019s Encrypt</p> </li> <li> <p>\u2699\ufe0f Serves HTTP (port\u00a080) and HTTPS (port\u00a0443)</p> </li> <li> <p>\ud83d\udd04 Routes traffic to local applications or static files based on domain</p> </li> <li> <p>\ud83d\udcdd Uses a single Caddyfile for all configuration</p> </li> </ul>"},{"location":"Hosting/Caddy%20Overview%20and%20Config/#installing-caddy-on-debianubuntu","title":"Installing Caddy on Debian/Ubuntu","text":"<pre><code>sudo apt update\nsudo apt install -y debian-keyring debian-archive-keyring apt-transport-https \\\n  curl gnupg\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' \\\n  | sudo gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' \\\n  | sudo tee /etc/apt/sources.list.d/caddy-stable.list\nsudo apt update\nsudo apt install -y caddy\n</code></pre> <ul> <li> <p>Installs Caddy server and systemd service</p> </li> <li> <p>Enables automatic updates from the Caddy repository</p> </li> </ul>"},{"location":"Hosting/Caddy%20Overview%20and%20Config/#basic-caddyfile-structure","title":"Basic Caddyfile Structure","text":"<p>Location: <code>/etc/caddy/Caddyfile</code></p> <pre><code>example.tyshub.xyz {\n  respond \"\ud83d\ude80 It works!\" 200\n}\n</code></pre> <ul> <li> <p>Header: domain name</p> </li> <li> <p>Body: site-specific directives (e.g., <code>respond</code>, <code>reverse_proxy</code>, <code>file_server</code>)</p> </li> </ul>"},{"location":"Hosting/Caddy%20Overview%20and%20Config/#common-directives","title":"Common Directives","text":"Directive Purpose <code>respond</code> Return static text and HTTP status <code>reverse_proxy</code> Forward requests to a backend server <code>file_server</code> Serve static files from a directory <code>encode</code> Enable compression (gzip, zstd) <code>tls</code> Specify custom certificate paths <code>log</code> Configure access/error logging"},{"location":"Hosting/Caddy%20Overview%20and%20Config/#example-reverse-proxy-to-local-app","title":"Example: Reverse Proxy to Local App","text":"<pre><code>finance.tyshub.xyz {\n  encode gzip zstd\n  reverse_proxy localhost:3000\n}\n</code></pre> <ul> <li> <p>Compresses responses</p> </li> <li> <p>Forwards traffic to an app on port\u00a03000</p> </li> </ul>"},{"location":"Hosting/Caddy%20Overview%20and%20Config/#managing-the-caddy-service","title":"Managing the Caddy Service","text":"<pre><code># Start and enable at boot\nsudo systemctl enable --now caddy\n\n# Reload config after editing Caddyfile\nsudo systemctl reload caddy\n\n# Restart (for core changes)\nsudo systemctl restart caddy\n\n# Check status\nsudo systemctl status caddy --no-pager\n</code></pre>"},{"location":"Hosting/Caddy%20Overview%20and%20Config/#validating-formatting-the-config","title":"Validating &amp; Formatting the Config","text":"<pre><code># Check syntax\nsudo caddy validate --config /etc/caddy/Caddyfile\n\n# Auto-format for readability\nsudo caddy fmt --overwrite /etc/caddy/Caddyfile\n</code></pre>"},{"location":"Hosting/Caddy%20Overview%20and%20Config/#logs-and-debugging","title":"Logs and Debugging","text":"<pre><code># Tail live logs (Ctrl+C to exit)\njournalctl -u caddy -f\n\n# Show recent errors\njournalctl -u caddy --no-pager -n 50\n</code></pre>"},{"location":"Hosting/Caddy%20Overview%20and%20Config/#best-practices","title":"Best Practices","text":"<ul> <li> <p>Keep the Caddyfile DRY: reuse global settings where possible</p> </li> <li> <p>Use wildcard certificates for subdomains if supported</p> </li> <li> <p>Backup your Caddyfile after major changes</p> </li> <li> <p>Limit HTTP (port\u00a080) to ACME challenges and redirects only</p> </li> <li> <p>Monitor logs and set up alerts for certificate renewals</p> </li> </ul>"},{"location":"Hosting/Caddy%20Overview%20and%20Config/#further-reading","title":"Further Reading","text":"<ul> <li> <p>Official documentation: https://caddyserver.com/docs/</p> </li> <li> <p>ACME challenge details: https://letsencrypt.org/docs/</p> </li> <li> <p>Caddy GitHub: https://github.com/caddyserver/caddy</p> </li> </ul>"},{"location":"Hosting/Commands_Reference/","title":"Commands Reference","text":"<p>A quick reference to the essential commands for managing your Homelab hosting environment.</p>"},{"location":"Hosting/Commands_Reference/#service-control","title":"Service Control","text":"<pre><code>sudo systemctl status caddy --no-pager\n</code></pre> <p>Show the current status of the Caddy service without paging.</p> <pre><code>sudo systemctl enable --now caddy\n</code></pre> <p>Enable Caddy at boot and start it immediately.</p> <pre><code>sudo systemctl restart caddy\n</code></pre> <p>Restart Caddy fully (use after deep configuration or binary updates).</p> <pre><code>sudo systemctl reload caddy\n</code></pre> <p>Reload Caddy\u2019s configuration without downtime (use after editing Caddyfile).</p> <pre><code>sudo systemctl stop caddy\n</code></pre> <p>Stop the Caddy service.</p>"},{"location":"Hosting/Commands_Reference/#caddy-config-management","title":"Caddy Config Management","text":"<pre><code>sudo caddy validate --config /etc/caddy/Caddyfile\n</code></pre> <p>Check Caddyfile syntax and configuration validity.</p> <pre><code>sudo caddy fmt --overwrite /etc/caddy/Caddyfile\n</code></pre> <p>Auto-format and clean up the Caddyfile for consistent style.</p>"},{"location":"Hosting/Commands_Reference/#port-process-inspection","title":"Port &amp; Process Inspection","text":"<pre><code>ss -tulpn | grep -E ':80|:443'\n</code></pre> <p>List processes listening on ports 80 and 443 to verify Caddy binding.</p> <pre><code>sudo lsof -i :80 -sTCP:LISTEN\n</code></pre> <p>Identify which process is listening on port 80 (e.g., Python test server).</p> <pre><code>sudo ss -tulpn | grep caddy\n</code></pre> <p>Confirm Caddy\u2019s sockets and listening addresses.</p>"},{"location":"Hosting/Commands_Reference/#dns-network-checks","title":"DNS &amp; Network Checks","text":"<pre><code>curl -4 https://icanhazip.com\n</code></pre> <p>Show your current public IPv4 (used for DNS A records).</p> <pre><code>dig +short finance.tyshub.xyz @1.1.1.1\n</code></pre> <p>Verify that the A record for a domain resolves correctly via Cloudflare\u2019s DNS.</p> <pre><code>dig +short ai.tyshub.xyz @ns1.porkbun.com\n</code></pre> <p>Query Porkbun\u2019s authoritative nameserver to confirm DNS record at the source.</p>"},{"location":"Hosting/Commands_Reference/#httphttps-testing","title":"HTTP/HTTPS Testing","text":"<pre><code>curl -IL http://finance.tyshub.xyz\n</code></pre> <p>Perform a HEAD request over HTTP to check redirects or status.</p> <pre><code>curl -IL https://finance.tyshub.xyz\n</code></pre> <p>Perform a HEAD request over HTTPS to inspect TLS handshake and status code.</p> <pre><code>curl -k https://ai.tyshub.xyz\n</code></pre> <p>Bypass certificate verification for quick local testing of HTTPS.</p>"},{"location":"Hosting/Commands_Reference/#logs-monitoring","title":"Logs &amp; Monitoring","text":"<pre><code>journalctl -u caddy -f\n</code></pre> <p>Tail live logs for the Caddy service (press Ctrl+C to exit).</p> <pre><code>journalctl -u caddy --no-pager -n 50\n</code></pre> <p>Show the last 50 log entries for Caddy without paging.</p>"},{"location":"Hosting/Commands_Reference/#firewall-management","title":"Firewall Management","text":"<pre><code>sudo ufw allow 80/tcp\n</code></pre> <p>Allow HTTP through Ubuntu\u2019s UFW firewall.</p> <pre><code>sudo ufw allow 443/tcp\n</code></pre> <p>Allow HTTPS through Ubuntu\u2019s UFW firewall.</p> <pre><code>sudo ufw status verbose\n</code></pre> <p>View detailed UFW status and rules.</p>"},{"location":"Hosting/Domains%20and%20DNS/","title":"Domains and DNS","text":""},{"location":"Hosting/Domains%20and%20DNS/#what-is-a-domain","title":"What Is a Domain?","text":"<p>A domain name (e.g., <code>finance.tyshub.xyz</code>) is a human-readable label that maps to a server\u2019s IP address (e.g., <code>79.235.252.101</code>). You configure it via DNS records at your registrar.</p>"},{"location":"Hosting/Domains%20and%20DNS/#key-dns-record-types","title":"Key DNS Record Types","text":"<ul> <li> <p>A record: maps a hostname to an IPv4 address</p> </li> <li> <p>AAAA record: maps a hostname to an IPv6 address</p> </li> <li> <p>CNAME record: aliases one hostname to another</p> </li> <li> <p>TXT record: holds arbitrary text (used for verification, ACME challenges)</p> </li> </ul>"},{"location":"Hosting/Domains%20and%20DNS/#basic-dns-setup-steps","title":"Basic DNS Setup Steps","text":"<ol> <li> <p>Log in to your DNS provider (e.g., Porkbun).</p> </li> <li> <p>Add an A record for your subdomain:</p> <p><code>text Type: A   Host: finance   Value: YOUR_PUBLIC_IP  # e.g., 79.235.252.101   TTL: 300</code></p> </li> <li> <p>(Optional) Wildcard record if you want any subdomain to resolve:</p> <p><code>text Type: A   Host: *   Value: YOUR_PUBLIC_IP   TTL: 300</code></p> </li> <li> <p>Save and wait ~30 seconds for propagation.</p> </li> </ol>"},{"location":"Hosting/Domains%20and%20DNS/#verifying-dns-propagation","title":"Verifying DNS Propagation","text":"<p>Run from any terminal or use a DNS-checking website:</p> <pre><code>dig +short finance.tyshub.xyz @1.1.1.1\n</code></pre> <p>Expected output: your public IPv4 (e.g., <code>79.235.252.101</code>).</p>"},{"location":"Hosting/Domains%20and%20DNS/#common-dns-troubleshooting","title":"Common DNS Troubleshooting","text":"<ul> <li> <p>Nothing returns: record not saved or typo in host/name</p> </li> <li> <p>Old IP returns: wait for TTL (300 s) or reduce TTL when editing</p> </li> <li> <p>Different IP: verify your current public IP with:</p> <p><code>bash curl -4 https://icanhazip.com</code></p> </li> </ul>"},{"location":"Hosting/Domains%20and%20DNS/#tips-best-practices","title":"Tips &amp; Best Practices","text":"<ul> <li> <p>Use a static or reserved DHCP lease on your router so your server\u2019s LAN IP never changes.</p> </li> <li> <p>Keep TTL low (300\u2013600 s) during setup, then raise to 3600 s once stable.</p> </li> <li> <p>Maintain a wildcard A record (<code>*</code>) if you plan multiple subdomains.</p> </li> </ul>"},{"location":"Hosting/Troubleshooting%20and%20Alternatives/","title":"Troubleshooting and Alternatives","text":""},{"location":"Hosting/Troubleshooting%20and%20Alternatives/#common-issues-fixes","title":"Common Issues &amp; Fixes","text":""},{"location":"Hosting/Troubleshooting%20and%20Alternatives/#1-dns-resolution-errors","title":"1. DNS Resolution Errors","text":"<ul> <li>Error: <code>ERR_NAME_NOT_RESOLVED</code>Cause: DNS record typo or propagation delay.Fix: <code>bash&lt;br&gt; dig +short finance.tyshub.xyz @1.1.1.1&lt;br&gt;</code> Ensure it returns your public IP. If not, correct the record and wait TTL.</li> </ul>"},{"location":"Hosting/Troubleshooting%20and%20Alternatives/#2-connection-refused-timeout","title":"2. Connection Refused / Timeout","text":"<ul> <li>Error: <code>ERR_CONNECTION_REFUSED</code> or <code>ERR_CONNECTION_TIMED_OUT</code>Cause: Port forwarding missing, firewall blocking, or Caddy not listening.Fix: 1. Verify router forwards ports 80 &amp; 443: - External Port: 80 \u2192 LAN IP: 192.168.x.x, Port: 80 - External Port: 443 \u2192 LAN IP: 192.168.x.x, Port: 443 2. Confirm UFW rules: <code>bash&lt;br&gt; sudo ufw allow 80,443/tcp&lt;br&gt; sudo ufw status verbose&lt;br&gt;</code> 3. Check Caddy listeners: <code>bash&lt;br&gt; ss -tulpn \\| grep -E ':80|:443'&lt;br&gt;</code></li> </ul>"},{"location":"Hosting/Troubleshooting%20and%20Alternatives/#3-caddy-fails-to-start","title":"3. Caddy Fails to Start","text":"<ul> <li>Error: <code>bind: address already in use</code>Cause: Another process (e.g., Python test server) occupies port 80/443.Fix: <code>bash&lt;br&gt; sudo lsof -i :80 -sTCP:LISTEN&lt;br&gt; kill &lt;PID&gt; # stop the conflicting process&lt;br&gt; sudo systemctl restart caddy&lt;br&gt;</code></li> </ul>"},{"location":"Hosting/Troubleshooting%20and%20Alternatives/#4-certificate-issues","title":"4. Certificate Issues","text":"<ul> <li>Error: Renewal failures or missing OCSP stapling warningsCause: Port 80 closed, DNS not pointing correctly, or HTTP-&gt;HTTPS redirect conflicts.Fix: 1. Ensure port 80 is open and forwarded. 2. Do not override Caddy\u2019s default listeners (allow it to bind both 80/443). 3. Validate config: <code>bash&lt;br&gt; sudo caddy validate --config /etc/caddy/Caddyfile&lt;br&gt;</code></li> </ul>"},{"location":"Hosting/Troubleshooting%20and%20Alternatives/#alternatives-to-caddy","title":"Alternatives to Caddy","text":"Tool Pros Cons NGINX Highly configurable, widely used Manual TLS management, verbose Apache Full-featured, .htaccess support Heavyweight, complex to setup Traefik Docker-native, auto-detects services Learning curve, YAML configs Cloudflare Tunnel No port forwarding required, secure tunnels External dependency, possible latency Tailscale Funnel Secure P2P access without exposing ports Only supports HTTP(S), Tailscale needed"},{"location":"Hosting/Troubleshooting%20and%20Alternatives/#when-to-use-these-alternatives","title":"When to Use These Alternatives","text":"<ul> <li> <p>NGINX/Apache: if you need advanced rewrites, legacy support, or granular control.</p> </li> <li> <p>Traefik: if your environment is heavily Docker/Kubernetes-based.</p> </li> <li> <p>Tunnels (Cloudflare/Tailscale): when port forwarding is not possible or IP changes frequently.</p> </li> </ul>"},{"location":"Hosting/Troubleshooting%20and%20Alternatives/#additional-resources","title":"Additional Resources","text":"<ul> <li> <p>Caddy Docs: https://caddyserver.com/docs/</p> </li> <li> <p>Let's Encrypt Docs: https://letsencrypt.org/docs/</p> </li> <li> <p>DNS Checker: https://dnschecker.org/</p> </li> <li> <p>Port Check: https://www.yougetsignal.com/tools/open-ports/</p> </li> </ul>"}]}